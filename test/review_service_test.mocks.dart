// Mocks generated by Mockito 5.0.7 from annotations
// in sleep_timer/test/review_service_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:in_app_purchase/src/in_app_purchase/purchase_details.dart'
    as _i5;
import 'package:logger/src/logger.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:sleep_timer/model/product.dart' as _i6;
import 'package:sleep_timer/services/purchase_service.dart' as _i3;

// ignore_for_file: comment_references
// ignore_for_file: unnecessary_parenthesis

// ignore_for_file: prefer_const_constructors

// ignore_for_file: avoid_redundant_argument_values

class _FakeLogger extends _i1.Fake implements _i2.Logger {}

/// A class which mocks [PurchaseService].
///
/// See the documentation for Mockito's code generation for more information.
class MockPurchaseService extends _i1.Mock implements _i3.PurchaseService {
  MockPurchaseService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Logger get log =>
      (super.noSuchMethod(Invocation.getter(#log), returnValue: _FakeLogger())
          as _i2.Logger);
  @override
  _i4.Stream<List<_i5.PurchaseDetails>> get purchaseUpdatedStream =>
      (super.noSuchMethod(Invocation.getter(#purchaseUpdatedStream),
              returnValue: Stream<List<_i5.PurchaseDetails>>.empty())
          as _i4.Stream<List<_i5.PurchaseDetails>>);
  @override
  List<_i6.Product> get products =>
      (super.noSuchMethod(Invocation.getter(#products),
          returnValue: <_i6.Product>[]) as List<_i6.Product>);
  @override
  void listenToPurchases() =>
      super.noSuchMethod(Invocation.method(#listenToPurchases, []),
          returnValueForMissingStub: null);
  @override
  _i4.Future<void> updateProducts() =>
      (super.noSuchMethod(Invocation.method(#updateProducts, []),
          returnValue: Future<void>.value(null),
          returnValueForMissingStub: Future.value()) as _i4.Future<void>);
  @override
  _i4.Future<bool> buyProduct(_i6.Product? product) =>
      (super.noSuchMethod(Invocation.method(#buyProduct, [product]),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
  @override
  void resetPurchases(List<_i5.PurchaseDetails>? purchases) =>
      super.noSuchMethod(Invocation.method(#resetPurchases, [purchases]),
          returnValueForMissingStub: null);
  @override
  void listenToReactiveValues(List<dynamic>? reactiveValues) =>
      super.noSuchMethod(
          Invocation.method(#listenToReactiveValues, [reactiveValues]),
          returnValueForMissingStub: null);
  @override
  void addListener(void Function()? listener) =>
      super.noSuchMethod(Invocation.method(#addListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void removeListener(void Function()? listener) =>
      super.noSuchMethod(Invocation.method(#removeListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void notifyListeners() =>
      super.noSuchMethod(Invocation.method(#notifyListeners, []),
          returnValueForMissingStub: null);
}
